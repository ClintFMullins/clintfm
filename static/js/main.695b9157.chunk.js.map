{"version":3,"sources":["utils/time.js","features/time-widget/components/sky-sphere/component.js","utils/dom.js","features/time-widget/components/stars/component.js","features/time-widget/components/landscape/component.js","features/time-widget/components/current-time/component.js","utils/render-interval.js","features/time-widget/components/quick-time/component.js","features/time-widget/component.js","features/showcase/component.js","pages/homepage/component.js","pages/projects/components/current-time/component.js","pages/projects/component.js","serviceWorker.js","index.js","app/component.js"],"names":["DAY_SCALE","DAY_SCALE_HALF","DAY_SCALE_FOURTH","getDayNightDetails","currentTime","Date","calculateDayNightDetails","getHours","getMinutes","hour","minute","currentHour","maxDistance","tiltedHour","peakDayNightTime","totalReferenceTime","skySpherePercentY","Math","abs","skySpherePercentX","dayPercents","map","sectionNum","distanceDirect","distanceIndirect","distance","min","isDay","eveningPercent","eveningPeakPercent","nightPercent","nightPeakPercent","morningPercent","morningPeakPercent","noonPercent","noonPeakPercent","SkySphere","props","_useDomDimensions","initialWidthHeight","ref","useRef","_useState","useState","_useState2","Object","slicedToArray","width","setWidth","_useState3","_useState4","height","setHeight","useLayoutEffect","current","clientWidth","clientHeight","useDomDimensions","translateX","percentX","translateY","percentY","size","style","concat","transform","backgroundColor","react_default","a","createElement","className","sunshine","getRandom","max","random","starsCache","Stars","boxShadowValue","i","addStars","boxShadow","Landscape","isRound","widthSize","heightSize","borderSize","wrapperStyle","border","borderRadius","opacity","TIME_UPDATE_INTERVAL_MS","CurrentTime","dayNightDetails","intervalMs","valueFunc","value","setValue","useEffect","interval","setInterval","clearInterval","useRenderInterval","assign","QuickTime","setCurrentTime","getTime","useChangingDayNightDetails","TimeWidget","showCurrentTime","setShowCurrentTime","childProps","onMouseEnter","onMouseLeave","alwaysRun","Showcase","Link","to","link","children","Homepage","background","display","justifyContent","alignItems","flexDirection","marginBottom","window","innerWidth","innerHeight","Projects","Switch","Route","exact","path","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","HashRouter","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.695b9157.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst DAY_SCALE = 24;\nconst DAY_SCALE_HALF = DAY_SCALE / 2;\nconst DAY_SCALE_FOURTH = DAY_SCALE / 4;\n\nexport function getDayNightDetails() {\n  const currentTime = new Date();\n\n  const hour = currentTime.getHours();\n  const minute = currentTime.getMinutes();\n\n  return calculateDayNightDetails(hour, minute)\n}\n\nexport function useChangingDayNightDetails() {\n  const [currentTime, setCurrentTime] = useState(new Date());\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentTime(new Date(currentTime.getTime() + 10000));\n    }, 0);\n\n    return () => {\n      clearInterval(interval);\n    }\n  });\n\n  return calculateDayNightDetails(currentTime.getHours(), currentTime.getMinutes());\n}\n\nexport function calculateDayNightDetails(hour, minute) {\n  // 0-12 = Night, 12-24 = Day, easier for calculations\n  const tiltedHour = (hour + DAY_SCALE_FOURTH) % DAY_SCALE;\n  const referenceHour = tiltedHour % (DAY_SCALE_HALF);\n  const peakDayNightTime = DAY_SCALE_FOURTH;\n  const minuteDecimal = minute === 0 ? 0 : (minute / 60);\n  const totalReferenceTime = referenceHour + minuteDecimal;\n  const distanceFromPeak = Math.abs(peakDayNightTime - totalReferenceTime);\n  const skySpherePercentY = (peakDayNightTime - distanceFromPeak) / peakDayNightTime * 100;\n  const skySpherePercentX = (totalReferenceTime * 100 / 12);\n\n  const dayPercents = getSectionOpacity(tiltedHour, [0, 3, 6, 9, 12, 15, 18, 21], 4);\n\n  return {\n    isDay: tiltedHour >= DAY_SCALE_HALF,\n    skySpherePercentY,\n    skySpherePercentX,\n    eveningPercent: dayPercents[0],\n    eveningPeakPercent: dayPercents[1],\n    nightPercent: dayPercents[2],\n    nightPeakPercent: dayPercents[3],\n    morningPercent: dayPercents[4],\n    morningPeakPercent: dayPercents[5],\n    noonPercent: dayPercents[6],\n    noonPeakPercent: dayPercents[7],\n    hour,\n  };\n}\n\n/**\n * Given the params below this returns a parallel array of decimals based on\n * the closeness to each given section.\n * \n * @param {number} hour\n * @param {number[]} sectionPeaks \n * @param {number} maxDistance \n */\nexport function getSectionOpacity(currentHour, sectionPeaks, maxDistance) {\n  return sectionPeaks.map((sectionNum) => {\n    const distanceDirect = Math.abs(sectionNum - currentHour);\n    const distanceIndirect = sectionNum > currentHour ?\n      (24 - sectionNum) + currentHour :\n      (24 - currentHour) + sectionNum;\n    const distance = Math.min(distanceDirect, distanceIndirect);\n\n    return distance > maxDistance ? 0 : (maxDistance - distance) / maxDistance;\n  });\n}","import React from 'react';\nimport { useDomDimensions } from '../../../../utils/dom';\nimport './styles.css';\n\nexport function SkySphere(props) {\n  const { width, height, ref } = useDomDimensions();\n\n  const translateX = (props.percentX / 100) * width;\n  const translateY = (props.percentY / 100) * height;\n\n  const size = props.isDay ? props.size : props.size / 2; \n\n  const style = {\n    width: `${size}px`,\n    height: `${size}px`,\n    transform: `translateX(${translateX}px) translateY(-${translateY}px)`,\n    backgroundColor: props.isDay ? 'yellow' : 'white',\n  }\n\n  return (\n    <div className=\"sky-sphere-center\">\n      <div className=\"sky-sphere-wrapper\" ref={ref}>\n        <div className={`sky-sphere ${props.sunshine ? 'sky-sphere-hue' : ''}`} style={style} />\n      </div>\n    </div>\n  );\n}","import { useRef, useState, useLayoutEffect } from 'react';\n\nexport function useDomDimensions(initialWidthHeight) {\n  const ref = useRef(null);\n  const [width, setWidth] = useState(initialWidthHeight);\n  const [height, setHeight] = useState(initialWidthHeight);\n\n  useLayoutEffect(() => {\n    setWidth(ref.current && ref.current.clientWidth);\n    setHeight(ref.current && ref.current.clientHeight);\n  }, [ref.current]);\n\n  return { ref, width, height };\n}","import React, { useState } from 'react';\nimport './styles.css';\n\nfunction getRandom(max) {\n  return Math.random() * max;\n}\n\nlet starsCache = {};\nfunction addStars(size) {\n  if (starsCache[size]) {\n    return starsCache[size];\n  }\n\n  let boxShadowValue = '';\n  boxShadowValue += `${getRandom(size)}px ${getRandom(size)}px white`\n  for (let i = 2; i < size; i++) {\n    boxShadowValue += ` , ${getRandom(size)}px ${getRandom(size)}px white`\n  }\n\n  starsCache[size] = boxShadowValue;\n\n  return boxShadowValue;\n}\n\nexport function Stars(props) {\n  const [boxShadowValue] = useState(addStars(props.size));\n\n  const style = {\n    boxShadow: boxShadowValue,\n  }\n\n  return (\n    <div className=\"stars\" style={style} />\n  );\n}","import React from 'react';\nimport { SkySphere } from '../sky-sphere/component';\nimport { Stars } from '../stars/component';\nimport './styles.css';\n\nexport function Landscape(props) {\n  const {\n    hour,\n    skySpherePercentX,\n    skySpherePercentY,\n    isDay,\n    nightPercent,\n    nightPeakPercent,\n    morningPercent,\n    morningPeakPercent,\n    noonPercent,\n    noonPeakPercent,\n    eveningPercent,\n    eveningPeakPercent,\n    width,\n    height,\n    isRound,\n  } = props;\n\n  const widthSize = `${width}px`;\n  const heightSize = `${height}px`;\n  const borderSize = Math.max(1, Math.min(3, heightSize / 50));\n\n  const wrapperStyle = {\n    width: widthSize,\n    height: heightSize,\n    border: `solid black ${borderSize}px`,\n    borderRadius: isRound ? '100%' : '0',\n  }\n\n  return (\n    <div className=\"time-widget-wrapper\" style={wrapperStyle}>\n      <div className=\"sky\">\n        <div className=\"light-filter time-sky-night\" style={{ opacity: nightPercent }} />\n        <div className=\"light-filter time-sky-night-peak\" style={{ opacity: nightPeakPercent }} />\n        <div className=\"light-filter time-sky-morning\" style={{ opacity: morningPercent }} />\n        <div className=\"light-filter time-sky-morning-peak\" style={{ opacity: morningPeakPercent }} />\n        <div className=\"light-filter time-sky-noon\" style={{ opacity: noonPercent }} />\n        <div className=\"light-filter time-sky-noon-peak\" style={{ opacity: noonPeakPercent }} />\n        <div className=\"light-filter time-sky-evening\" style={{ opacity: eveningPercent }} />\n        <div className=\"light-filter time-sky-evening-peak\" style={{ opacity: eveningPeakPercent }} />\n      </div>\n      <div style={{ opacity: (nightPercent + nightPeakPercent) }}>\n        <Stars size={width} />\n      </div>\n      <SkySphere\n        hour={hour}\n        percentX={skySpherePercentX}\n        percentY={skySpherePercentY}\n        isDay={isDay}\n        size={height / 6}\n        sunshine={isDay}\n      />\n      <div className=\"time-land-wrapper\">\n        <div className=\"land light-filter time-land-night\" style={{ opacity: nightPercent }} />\n        <div className=\"land light-filter time-land-night-peak\" style={{ opacity: nightPeakPercent }} />\n        <div className=\"land light-filter time-land-morning\" style={{ opacity: morningPercent }} />\n        <div className=\"land light-filter time-land-morning-peak\" style={{ opacity: morningPeakPercent }} />\n        <div className=\"land light-filter time-land-noon\" style={{ opacity: noonPercent }} />\n        <div className=\"land light-filter time-land-noon-peak\" style={{ opacity: noonPeakPercent }} />\n        <div className=\"land light-filter time-land-evening\" style={{ opacity: eveningPercent }} />\n        <div className=\"land light-filter time-land-evening-peak\" style={{ opacity: eveningPeakPercent }} />\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport { useRenderInterval } from '../../../../utils/render-interval';\nimport { getDayNightDetails } from '../../../../utils/time';\nimport { Landscape } from '../landscape/component';\n\nconst TIME_UPDATE_INTERVAL_MS = 20 * 1000;\n\nexport function CurrentTime(props) {\n  const dayNightDetails = useRenderInterval(TIME_UPDATE_INTERVAL_MS, getDayNightDetails);\n\n  return (\n    <Landscape {...dayNightDetails} {...props} />\n  )\n}","import { useState, useEffect } from 'react';\n\nexport function useRenderInterval(intervalMs, valueFunc) {\n  const [value, setValue] = useState(valueFunc());\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setValue(valueFunc);\n    }, intervalMs);\n\n    return () => {\n      clearInterval(interval);\n    }\n  }, []);\n\n  return value;\n}","import React from 'react';\nimport { useChangingDayNightDetails } from '../../../../utils/time';\nimport { Landscape } from '../landscape/component';\n\nexport function QuickTime(props) {\n  const dayNightDetails = useChangingDayNightDetails();\n\n  return (\n    <Landscape {...dayNightDetails} {...props} />\n  )\n}","import React, { useState } from 'react';\nimport { CurrentTime } from './components/current-time/component';\nimport { QuickTime } from './components/quick-time/component';\n\nexport function TimeWidget(props) {\n  const [showCurrentTime, setShowCurrentTime] = useState(true);\n\n  const width = props.size ? props.size : props.width;\n  const height = props.size ? props.size : props.height;\n\n  const childProps = {\n    height,\n    width,\n    isRound: props.isRound,\n  }\n\n  return (\n    <div\n      onMouseEnter={() => setShowCurrentTime(false)}\n      onMouseLeave={() => setShowCurrentTime(true)}\n    >\n      {showCurrentTime && !props.alwaysRun ? <CurrentTime {...childProps} /> : <QuickTime {...childProps} />}\n    </div>\n  )\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles.css';\n\nexport function Showcase(props) {\n  return (\n    <Link to={props.link}>\n      <div className=\"showcase\">\n        {props.children}\n      </div>\n    </Link>\n  )\n}","import React from 'react';\nimport { TimeWidget } from '../../features/time-widget/component';\nimport { Showcase } from '../../features/showcase/component';\nimport './style.css';\n\nexport function Homepage() {\n  return (\n    <div style={{ background: 'eggshell', height: '100vh', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\n      <div style={{ marginBottom: '20px' }}>\n      <Showcase link={`/projects/current-time`}>\n        <TimeWidget size={150} isRound={true} />\n      </Showcase>\n      </div>\n      <div style={{ marginBottom: '20px' }}>\n      <Showcase link={`/projects/current-time`}>\n        <TimeWidget size={150} isRound={true} />\n      </Showcase>\n      </div>\n      <div style={{ marginBottom: '20px' }}>\n      <Showcase link={`/projects/current-time`}>\n        <TimeWidget size={150} isRound={true} />\n      </Showcase>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { TimeWidget } from '../../../../features/time-widget/component';\n\nexport function CurrentTime() {\n  return (\n    <div>\n      <TimeWidget\n        width={window.innerWidth}\n        height={window.innerHeight}\n        isRound={false}\n        alwaysRun={true}\n      />\n    </div>\n  )\n}","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { CurrentTime } from '../projects/components/current-time/component';\n\nexport function Projects() {\n  return (\n    <Switch>\n      <Route exact path='/projects/current-time' component={CurrentTime}/>\n    </Switch>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport { App } from './app/component';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React from 'react';\nimport { Homepage } from '../pages/homepage/component';\nimport { Switch, Route } from 'react-router-dom';\nimport { Projects } from '../pages/projects/component';\nimport './style.css';\n\nexport function App() {\n  return (\n    <Switch>\n      <Route exact path='/' component={Homepage}/>\n      <Route path='/projects' component={Projects}/>\n    </Switch>\n  );\n}\n"],"sourceRoot":""}