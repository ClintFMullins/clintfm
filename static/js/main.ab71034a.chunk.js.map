{"version":3,"sources":["pages/homepage/component.js","utils/time.js","features/time-widget/components/sky-sphere/component.js","features/time-widget/components/stars/component.js","features/time-widget/components/landscape/component.js","features/time-widget/component.js","utils/render-interval.js","pages/projects/components/current-time/component.js","utils/dom.js","pages/projects/component.js","features/showcase/component.js","pages/play/component.js","features/profile/component.js","features/nav-bar/component.js","serviceWorker.js","index.js","app/component.js"],"names":["Homepage","react_default","a","createElement","className","Link","to","DAY_SCALE","DAY_SCALE_HALF","DAY_SCALE_FOURTH","getDayNightDetails","currentTime","Date","calculateDayNightDetails","getHours","getMinutes","hour","minute","currentHour","maxDistance","tiltedHour","peakDayNightTime","totalReferenceTime","skySpherePercentY","Math","abs","skySpherePercentX","dayPercents","map","sectionNum","distanceDirect","distanceIndirect","distance","min","isDay","eveningPercent","eveningPeakPercent","nightPercent","nightPeakPercent","morningPercent","morningPeakPercent","noonPercent","noonPeakPercent","SkySphere","props","size","translateX","percentX","width","translateY","percentY","height","style","concat","transform","backgroundColor","sunshine","getRandom","max","random","starsCache","Stars","boxShadow","cacheKey","boxShadowValue","i","addStars","Landscape","isRound","widthSize","heightSize","borderSize","wrapperStyle","border","borderRadius","opacity","TIME_UPDATE_INTERVAL_MS","TimeWidget","_useState","useState","_useState2","Object","slicedToArray","userIsFocused","setUserIsFocused","currentTimeDetails","intervalMs","valueFunc","value","setValue","useEffect","interval","setTimeout","clearTimeout","useRenderInterval","showCurrentTime","alwaysRun","rotatingDetails","isActive","setCurrentTime","moveTimeForward","getTime","clearInterval","useChangingDayNightDetails","childProps","objectSpread","onMouseEnter","onMouseLeave","CurrentTime","_useWindowSize","_useState5","window","innerWidth","_useState6","setWidth","_useState7","innerHeight","_useState8","setHeight","updateWindowSize","useLayoutEffect","addEventListener","removeEventListener","useWindowSize","Projects","Switch","Route","exact","path","component","Showcase","hue","content","children","link","Play","Profile","hasLoaded","setHasLoaded","useMutationEffect","NavBar","Boolean","location","hostname","match","ReactDOM","render","HashRouter","Fragment","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ab71034a.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './style.css';\n\nexport function Homepage() {\n  return (\n    <div className=\"homepage\">\n      <div className=\"homepage-choice-wrapper\">\n        <Link to=\"/\" className=\"homepage-big homepage-big-left\">\n          work\n        </Link>\n        <Link className=\"homepage-big homepage-big-right\" to=\"/play\">\n          play\n        </Link>;\n      </div>\n    </div>\n  );\n}","import { useEffect, useState } from 'react';\n\nconst DAY_SCALE = 24;\nconst DAY_SCALE_HALF = DAY_SCALE / 2;\nconst DAY_SCALE_FOURTH = DAY_SCALE / 4;\n\nexport function getDayNightDetails() {\n  const currentTime = new Date();\n\n  const hour = currentTime.getHours();\n  const minute = currentTime.getMinutes();\n\n  return calculateDayNightDetails(hour, minute)\n}\n\nexport function useChangingDayNightDetails(isActive) {\n  const [currentTime, setCurrentTime] = useState(new Date());\n\n  function moveTimeForward() {\n    setCurrentTime(new Date(currentTime.getTime() + 1000000));\n  }\n\n  useEffect(() => {\n    if (isActive) {\n      const interval = setTimeout(moveTimeForward, 250);\n\n      return () => {\n        clearInterval(interval);\n      }\n    }\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setCurrentTime(new Date());\n    }\n  }, [isActive]);\n\n  return calculateDayNightDetails(currentTime.getHours(), currentTime.getMinutes());\n}\n\nexport function calculateDayNightDetails(hour, minute) {\n  // 0-12 = Night, 12-24 = Day, easier for calculations\n  const tiltedHour = (hour + DAY_SCALE_FOURTH) % DAY_SCALE;\n  const referenceHour = tiltedHour % (DAY_SCALE_HALF);\n  const peakDayNightTime = DAY_SCALE_FOURTH;\n  const minuteDecimal = minute === 0 ? 0 : (minute / 60);\n  const totalReferenceTime = referenceHour + minuteDecimal;\n  const distanceFromPeak = Math.abs(peakDayNightTime - totalReferenceTime);\n  const skySpherePercentY = (peakDayNightTime - distanceFromPeak) / peakDayNightTime * 100;\n  const skySpherePercentX = (totalReferenceTime * 100 / 12);\n  const dayPercents = getSectionOpacity(tiltedHour, [0, 3, 6, 9, 12, 15, 18, 21], 4);\n\n  return {\n    isDay: tiltedHour >= DAY_SCALE_HALF,\n    skySpherePercentY,\n    skySpherePercentX,\n    eveningPercent: dayPercents[0],\n    eveningPeakPercent: dayPercents[1],\n    nightPercent: dayPercents[2],\n    nightPeakPercent: dayPercents[3],\n    morningPercent: dayPercents[4],\n    morningPeakPercent: dayPercents[5],\n    noonPercent: dayPercents[6],\n    noonPeakPercent: dayPercents[7],\n    hour,\n  };\n}\n\n/**\n * Given the params below this returns a parallel array of decimals based on\n * the closeness to each given section.\n * \n * @param {number} hour\n * @param {number[]} sectionPeaks \n * @param {number} maxDistance \n */\nexport function getSectionOpacity(currentHour, sectionPeaks, maxDistance) {\n  return sectionPeaks.map((sectionNum) => {\n    const distanceDirect = Math.abs(sectionNum - currentHour);\n    const distanceIndirect = sectionNum > currentHour ?\n      (24 - sectionNum) + currentHour :\n      (24 - currentHour) + sectionNum;\n    const distance = Math.min(distanceDirect, distanceIndirect);\n\n    return distance > maxDistance ? 0 : (maxDistance - distance) / maxDistance;\n  });\n}","import React from 'react';\nimport './styles.css';\n\nexport function SkySphere(props) {\n  const size = props.isDay ? props.size : props.size / 2;\n\n  const translateX = ((props.percentX / 100) * props.width) - (size / 2);\n  const translateY = ((props.percentY / 100) * props.height) - (size / 2);\n\n  const style = {\n    width: `${size}px`,\n    height: `${size}px`,\n    transform: `translateX(${translateX}px) translateY(-${translateY}px)`,\n    backgroundColor: props.isDay ? 'yellow' : 'white',\n  }\n\n  return (\n    <div className=\"sky-sphere-center\">\n      <div className={`sky-sphere ${props.sunshine ? 'sky-sphere-hue' : ''}`} style={style} />\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport './styles.css';\n\nfunction getRandom(max) {\n  return Math.random() * max;\n}\n\nlet starsCache = {};\nfunction addStars(width, height) {\n  const cacheKey = `${width}${height}`;\n\n  if (starsCache[cacheKey]) {\n    return starsCache[cacheKey];\n  }\n\n  let boxShadowValue = '';\n  boxShadowValue += `${getRandom(width)}px ${getRandom(height)}px white`\n  for (let i = 2; i < width; i++) {\n    boxShadowValue += ` , ${getRandom(width)}px ${getRandom(height)}px white`\n  }\n\n  starsCache[cacheKey] = boxShadowValue;\n\n  return boxShadowValue;\n}\n\nexport function Stars(props) {\n  return (\n    <div className=\"stars\" style={{ boxShadow: addStars(props.width * 2, props.height * 2) }} />\n  );\n}","import React from 'react';\nimport { SkySphere } from '../sky-sphere/component';\nimport { Stars } from '../stars/component';\nimport './styles.css';\n\nexport function Landscape(props) {\n  const {\n    hour,\n    skySpherePercentX,\n    skySpherePercentY,\n    isDay,\n    nightPercent,\n    nightPeakPercent,\n    morningPercent,\n    morningPeakPercent,\n    noonPercent,\n    noonPeakPercent,\n    eveningPercent,\n    eveningPeakPercent,\n    width,\n    height,\n    isRound,\n  } = props;\n\n  const widthSize = `${width}px`;\n  const heightSize = `${height}px`;\n  const borderSize = Math.max(1, Math.min(3, heightSize / 50));\n\n  const wrapperStyle = {\n    width: widthSize,\n    height: heightSize,\n    border: `solid black ${borderSize}px`,\n    borderRadius: isRound ? '100%' : '0',\n  }\n\n  return (\n    <div className=\"time-widget-wrapper\" style={wrapperStyle}>\n      <div className=\"sky\">\n        <div className=\"light-filter time-sky-night\" style={{ opacity: nightPercent }} />\n        <div className=\"light-filter time-sky-night-peak\" style={{ opacity: nightPeakPercent }} />\n        <div className=\"light-filter time-sky-morning\" style={{ opacity: morningPercent }} />\n        <div className=\"light-filter time-sky-morning-peak\" style={{ opacity: morningPeakPercent }} />\n        <div className=\"light-filter time-sky-noon\" style={{ opacity: noonPercent }} />\n        <div className=\"light-filter time-sky-noon-peak\" style={{ opacity: noonPeakPercent }} />\n        <div className=\"light-filter time-sky-evening\" style={{ opacity: eveningPercent }} />\n        <div className=\"light-filter time-sky-evening-peak\" style={{ opacity: eveningPeakPercent }} />\n      </div>\n      <div style={{ opacity: (nightPercent + nightPeakPercent) }}>\n        <Stars width={width} height={height} />\n      </div>\n      <SkySphere\n        hour={hour}\n        percentX={skySpherePercentX}\n        percentY={skySpherePercentY}\n        isDay={isDay}\n        size={height / 6}\n        width={width}\n        height={height}\n        sunshine={isDay}\n      />\n      <div className=\"time-land-wrapper\">\n        <div className=\"land light-filter time-land-night\" style={{ opacity: nightPercent }} />\n        <div className=\"land light-filter time-land-night-peak\" style={{ opacity: nightPeakPercent }} />\n        <div className=\"land light-filter time-land-morning\" style={{ opacity: morningPercent }} />\n        <div className=\"land light-filter time-land-morning-peak\" style={{ opacity: morningPeakPercent }} />\n        <div className=\"land light-filter time-land-noon\" style={{ opacity: noonPercent }} />\n        <div className=\"land light-filter time-land-noon-peak\" style={{ opacity: noonPeakPercent }} />\n        <div className=\"land light-filter time-land-evening\" style={{ opacity: eveningPercent }} />\n        <div className=\"land light-filter time-land-evening-peak\" style={{ opacity: eveningPeakPercent }} />\n      </div>\n    </div>\n  )\n}","import React, { useState } from 'react';\nimport { useRenderInterval } from '../../utils/render-interval';\nimport { useChangingDayNightDetails, getDayNightDetails } from '../../utils/time';\nimport { Landscape } from './components/landscape/component';\n\nconst TIME_UPDATE_INTERVAL_MS = 20 * 1000;\n\nexport function TimeWidget(props) {\n  const [userIsFocused, setUserIsFocused] = useState(true);\n  const currentTimeDetails = useRenderInterval(TIME_UPDATE_INTERVAL_MS, getDayNightDetails);\n  const showCurrentTime = userIsFocused && !props.alwaysRun;\n  const rotatingDetails = useChangingDayNightDetails(!showCurrentTime);\n\n  const width = props.size ? props.size : props.width;\n  const height = props.size ? props.size : props.height;\n\n  const childProps = {\n    height,\n    width,\n    isRound: props.isRound,\n    ...(showCurrentTime ? currentTimeDetails : rotatingDetails),\n  }\n\n  return (\n    <div\n      onMouseEnter={() => setUserIsFocused(false)}\n      onMouseLeave={() => setUserIsFocused(true)}\n    >\n      <Landscape {...childProps} />\n    </div>\n  )\n}","import { useState, useEffect } from 'react';\n\nexport function useRenderInterval(intervalMs, valueFunc) {\n  const [value, setValue] = useState(valueFunc());\n\n  useEffect(() => {\n    const interval = setTimeout(() => {\n      setValue(valueFunc);\n    }, intervalMs);\n\n    return () => {\n      clearTimeout(interval);\n    }\n  }, []);\n\n  return value;\n}","import React, { useState, useEffect } from 'react';\nimport { TimeWidget } from '../../../../features/time-widget/component';\nimport { useWindowSize } from '../../../../utils/dom';\n\nexport function CurrentTime() {\n  const { width, height } = useWindowSize();\n\n  return (\n    <div>\n      <TimeWidget\n        width={width}\n        height={height}\n        isRound={false}\n        alwaysRun={true}\n      />\n    </div>\n  )\n}","import { useRef, useState, useLayoutEffect } from 'react';\n\n// Doesn't seem to work :thinking:\nexport function useDomDimensions() {\n  const ref = useRef(null);\n  const [width, setWidth] = useState(null);\n  const [height, setHeight] = useState(null);\n\n  function updateContainerSize() {\n    setWidth(ref.current && ref.current.clientWidth);\n    setHeight(ref.current && ref.current.clientHeight);\n  }\n\n  useLayoutEffect(() => {\n    updateContainerSize();\n  }, [])\n\n  useLayoutEffect(() => {\n    ref.current.addEventListener('resize', updateContainerSize);\n\n    return () => {\n      ref.current.removeEventListener('resize', updateContainerSize)\n    }\n  }, []);\n\n  return { ref, width, height };\n}\n\nexport function useWindowSize() {\n  const [width, setWidth] = useState(window.innerWidth);\n  const [height, setHeight] = useState(window.innerHeight);\n\n  function updateWindowSize() {\n    setWidth(window.innerWidth);\n    setHeight(window.innerHeight);\n  }\n\n  useLayoutEffect(() => {\n    window.addEventListener('resize', updateWindowSize);\n\n    return () => {\n      window.removeEventListener('resize', updateWindowSize)\n    }\n  }, []);\n\n  return { width, height };\n}","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { CurrentTime } from '../projects/components/current-time/component';\n\nexport function Projects() {\n  return (\n    <Switch>\n      <Route exact path='/projects/current-time' component={CurrentTime}/>\n    </Switch>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles.css';\n\nexport function Showcase(props) {\n  const style = {\n    backgroundColor: `hsl(${props.hue}, 20%, 90%)`,\n    border: `hsl(${props.hue}, 30%, 100%) 1px solid`,\n  }\n\n  let content = (\n    <div className=\"showcase\" style={style}>\n      <div className=\"showcase\" style={style}>\n        <div className=\"showcase\" style={style}>\n          <div className=\"showcase\" style={style}>\n            {props.children}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  if (props.link) {\n    content = <Link to={props.link}>{content}</Link>;\n  }\n\n  return content;\n}","import React from 'react';\nimport { TimeWidget } from '../../features/time-widget/component';\nimport { Showcase } from '../../features/showcase/component';\nimport './styles.css';\n\nexport function Play() {\n  return (\n    <div className=\"play\">\n      <div className=\"showcase-wrapper\">\n        <Showcase hue={200} />\n      </div>\n      <div className=\"showcase-wrapper\">\n        <Showcase link={`/projects/current-time`} hue={3}>\n          <TimeWidget size={150} isRound={true} />\n        </Showcase>\n      </div>\n      <div className=\"showcase-wrapper\">\n        <Showcase hue={200} />\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useMutationEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles.css';\n\nexport function Profile() {\n  const [hasLoaded, setHasLoaded] = useState(false);\n\n  useMutationEffect(() => {\n    setHasLoaded(true)\n  }, [])\n\n  return (\n    <div className={`profile ${hasLoaded && 'profile-loaded'}`}>\n      <Link to=\"/\">clint.fm</Link>\n    </div>\n  );\n}\n","import React, { useState, useMutationEffect } from 'react';\nimport { Profile } from '../profile/component';\nimport './styles.css';\n\nexport function NavBar() {\n  return (\n    <div className=\"nav-bar\">\n      <Profile />\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport { App } from './app/component';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Homepage } from '../pages/homepage/component';\nimport { Switch, Route } from 'react-router-dom';\nimport { Projects } from '../pages/projects/component';\nimport { Play } from '../pages/play/component';\nimport { NavBar } from '../features/nav-bar/component';\nimport './style.css';\n\nexport function App() {\n  return (\n    <>\n      <Switch>\n        <Route exact path='/' component={Homepage}/>\n        <Route exact path='/play' component={Play}/>\n        <Route path='/projects' component={Projects}/>\n      </Switch>\n      <NavBar />\n    </>\n  );\n}\n"],"sourceRoot":""}