{"version":3,"sources":["pages/homepage/component.js","utils/render-interval.js","utils/time.js","features/time-widget/components/sky-sphere/component.js","features/time-widget/components/stars/component.js","features/time-widget/components/landscape/component.js","features/time-widget/component.js","pages/projects/components/current-time/component.js","utils/dom.js","pages/projects/components/cta/utils/phrases.js","pages/projects/components/cta/component.js","pages/projects/components/rhymes/utils/use-voice-recording.js","pages/projects/components/rhymes/component.js","pages/projects/component.js","pages/projects/components/cta/preview-component.js","pages/projects/components/rhymes/preview-component.js","features/showcase/component.js","pages/play/component.js","features/profile/component.js","features/nav-bar/component.js","serviceWorker.js","index.js","app/component.js"],"names":["Homepage","react_default","a","createElement","className","Link","to","useRenderInterval","intervalMs","valueFunc","_useState","useState","_useState2","Object","slicedToArray","value","setValue","useEffect","interval","setInterval","clearInterval","DAY_SCALE","DAY_SCALE_HALF","DAY_SCALE_FOURTH","getDayNightDetails","currentTime","Date","calculateDayNightDetails","getHours","getMinutes","hour","minute","currentHour","maxDistance","tiltedHour","peakDayNightTime","totalReferenceTime","skySpherePercentY","Math","abs","skySpherePercentX","dayPercents","map","sectionNum","distanceDirect","distanceIndirect","distance","min","isDay","eveningPercent","eveningPeakPercent","nightPercent","nightPeakPercent","morningPercent","morningPeakPercent","noonPercent","noonPeakPercent","SkySphere","props","size","translateX","percentX","width","translateY","percentY","height","style","concat","transform","backgroundColor","sunshine","getRandom","max","random","starsCache","Stars","boxShadow","cacheKey","boxShadowValue","i","addStars","Landscape","isRound","widthSize","heightSize","borderSize","wrapperStyle","border","borderRadius","opacity","TIME_UPDATE_INTERVAL_MS","TimeWidget","userIsFocused","setUserIsFocused","currentTimeDetails","showCurrentTime","alwaysRun","rotatingDetails","isActive","setCurrentTime","moveTimeForward","getTime","setTimeout","useChangingDayNightDetails","childProps","objectSpread","onMouseEnter","onMouseLeave","CurrentTime","_useWindowSize","_useState5","window","innerWidth","_useState6","setWidth","_useState7","innerHeight","_useState8","setHeight","updateWindowSize","useLayoutEffect","addEventListener","removeEventListener","useWindowSize","PHRASES_HAPPY","PHRASES_ANGRY","getPhrase","phrases","floor","length","getRandomClampedPercent","ACTION_ANGER","ACTION_HAPPY","ACTION_MOVE","reducer","state","action","type","isDisabled","phrase","top","left","initialState","CTA","_useReducer","useReducer","_useReducer2","dispatch","makeButtonAngry","disabled","onClick","recognition","SpeechRecognition","webkitSpeechRecognition","initialWordsState","initialRhymesState","click","and","speak","Rhymes","_useVoiceRecording","recordedWords","setRecordedWords","_useState3","_useState4","isRecording","setIsRecording","onresult","event","eachWordRecorded","results","resultIndex","transcript","split","triggerRecording","start","useVoiceRecording","hasClearedScreen","setHasClearedScreen","words","setWords","wordRhymes","setWordRhymes","resetRhymes","queueWord","word","prevState","toConsumableArray","fetch","then","response","json","responseWords","subsetOfRhymes","resp","slice","prevWordRhymes","defineProperty","catch","error","console","renderRhyme","index","key","scroll","document","body","clientHeight","behavior","forEach","Fragment","rhymesForWord","Projects","Switch","Route","exact","path","component","PreviewCTA","numberOfLines","getNumberOfLines","PreviewRhymes","Array","from","_","Showcase","hue","content","children","link","title","description","Play","Profile","hasLoaded","setHasLoaded","useMutationEffect","NavBar","Boolean","location","hostname","match","ReactDOM","render","HashRouter","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a60146cf.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './style.css';\n\nexport function Homepage() {\n  return (\n    <div className=\"homepage\">\n      <div className=\"homepage-choice-wrapper\">\n        <Link to=\"/\" className=\"homepage-big homepage-big-left\">\n          work\n        </Link>\n        <Link className=\"homepage-big homepage-big-right\" to=\"/play\">\n          play\n        </Link>\n      </div>\n    </div>\n  );\n}","import { useState, useEffect } from 'react';\n\n// TODO: Why does this set up the interval twice?\nexport function useRenderInterval(intervalMs, valueFunc) {\n  const [value, setValue] = useState(valueFunc());\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setValue(valueFunc());\n    }, intervalMs);\n\n    return () => {\n      clearInterval(interval);\n    }\n  }, []);\n\n  return value;\n}","import { useEffect, useState } from 'react';\n\nconst DAY_SCALE = 24;\nconst DAY_SCALE_HALF = DAY_SCALE / 2;\nconst DAY_SCALE_FOURTH = DAY_SCALE / 4;\n\nexport function getDayNightDetails() {\n  const currentTime = new Date();\n\n  const hour = currentTime.getHours();\n  const minute = currentTime.getMinutes();\n\n  return calculateDayNightDetails(hour, minute)\n}\n\nexport function useChangingDayNightDetails(isActive) {\n  const [currentTime, setCurrentTime] = useState(new Date());\n\n  function moveTimeForward() {\n    setCurrentTime(new Date(currentTime.getTime() + 1000000));\n  }\n\n  useEffect(() => {\n    if (isActive) {\n      const interval = setTimeout(moveTimeForward, 250);\n\n      return () => {\n        clearInterval(interval);\n      }\n    }\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setCurrentTime(new Date());\n    }\n  }, [isActive]);\n\n  return calculateDayNightDetails(currentTime.getHours(), currentTime.getMinutes());\n}\n\nexport function calculateDayNightDetails(hour, minute) {\n  // 0-12 = Night, 12-24 = Day, easier for calculations\n  const tiltedHour = (hour + DAY_SCALE_FOURTH) % DAY_SCALE;\n  const referenceHour = tiltedHour % (DAY_SCALE_HALF);\n  const peakDayNightTime = DAY_SCALE_FOURTH;\n  const minuteDecimal = minute === 0 ? 0 : (minute / 60);\n  const totalReferenceTime = referenceHour + minuteDecimal;\n  const distanceFromPeak = Math.abs(peakDayNightTime - totalReferenceTime);\n  const skySpherePercentY = (peakDayNightTime - distanceFromPeak) / peakDayNightTime * 100;\n  const skySpherePercentX = (totalReferenceTime * 100 / 12);\n  const dayPercents = getSectionOpacity(tiltedHour, [0, 3, 6, 9, 12, 15, 18, 21], 4);\n\n  return {\n    isDay: tiltedHour >= DAY_SCALE_HALF,\n    skySpherePercentY,\n    skySpherePercentX,\n    eveningPercent: dayPercents[0],\n    eveningPeakPercent: dayPercents[1],\n    nightPercent: dayPercents[2],\n    nightPeakPercent: dayPercents[3],\n    morningPercent: dayPercents[4],\n    morningPeakPercent: dayPercents[5],\n    noonPercent: dayPercents[6],\n    noonPeakPercent: dayPercents[7],\n    hour,\n  };\n}\n\n/**\n * Given the params below this returns a parallel array of decimals based on\n * the closeness to each given section.\n * \n * @param {number} hour\n * @param {number[]} sectionPeaks \n * @param {number} maxDistance \n */\nexport function getSectionOpacity(currentHour, sectionPeaks, maxDistance) {\n  return sectionPeaks.map((sectionNum) => {\n    const distanceDirect = Math.abs(sectionNum - currentHour);\n    const distanceIndirect = sectionNum > currentHour ?\n      (24 - sectionNum) + currentHour :\n      (24 - currentHour) + sectionNum;\n    const distance = Math.min(distanceDirect, distanceIndirect);\n\n    return distance > maxDistance ? 0 : (maxDistance - distance) / maxDistance;\n  });\n}","import React from 'react';\nimport './styles.css';\n\nexport function SkySphere(props) {\n  const size = props.isDay ? props.size : props.size / 2;\n\n  const translateX = ((props.percentX / 100) * props.width) - (size / 2);\n  const translateY = ((props.percentY / 100) * props.height) - (size / 2);\n\n  const style = {\n    width: `${size}px`,\n    height: `${size}px`,\n    transform: `translateX(${translateX}px) translateY(-${translateY}px)`,\n    backgroundColor: props.isDay ? 'yellow' : 'white',\n  }\n\n  return (\n    <div className=\"sky-sphere-center\">\n      <div className={`sky-sphere ${props.sunshine ? 'sky-sphere-hue' : ''}`} style={style} />\n    </div>\n  );\n}","import React from 'react';\nimport './styles.css';\n\nfunction getRandom(max) {\n  return Math.random() * max;\n}\n\nlet starsCache = {};\nfunction addStars(width, height) {\n  const cacheKey = `${width}${height}`;\n\n  if (starsCache[cacheKey]) {\n    return starsCache[cacheKey];\n  }\n\n  let boxShadowValue = '';\n  boxShadowValue += `${getRandom(width)}px ${getRandom(height)}px white`\n  for (let i = 2; i < width; i++) {\n    boxShadowValue += ` , ${getRandom(width)}px ${getRandom(height)}px white`\n  }\n\n  starsCache[cacheKey] = boxShadowValue;\n\n  return boxShadowValue;\n}\n\nexport function Stars(props) {\n  return (\n    <div className=\"stars\" style={{ boxShadow: addStars(props.width * 2, props.height * 2) }} />\n  );\n}","import React from 'react';\nimport { SkySphere } from '../sky-sphere/component';\nimport { Stars } from '../stars/component';\nimport './styles.css';\n\nexport function Landscape(props) {\n  const {\n    hour,\n    skySpherePercentX,\n    skySpherePercentY,\n    isDay,\n    nightPercent,\n    nightPeakPercent,\n    morningPercent,\n    morningPeakPercent,\n    noonPercent,\n    noonPeakPercent,\n    eveningPercent,\n    eveningPeakPercent,\n    width,\n    height,\n    isRound,\n  } = props;\n\n  const widthSize = `${width}px`;\n  const heightSize = `${height}px`;\n  const borderSize = Math.max(1, Math.min(3, heightSize / 50));\n\n  const wrapperStyle = {\n    width: widthSize,\n    height: heightSize,\n    border: `solid black ${borderSize}px`,\n    borderRadius: isRound ? '100%' : '0',\n  }\n\n  return (\n    <div className=\"time-widget-wrapper\" style={wrapperStyle}>\n      <div className=\"sky\">\n        <div className=\"light-filter time-sky-night\" style={{ opacity: nightPercent }} />\n        <div className=\"light-filter time-sky-night-peak\" style={{ opacity: nightPeakPercent }} />\n        <div className=\"light-filter time-sky-morning\" style={{ opacity: morningPercent }} />\n        <div className=\"light-filter time-sky-morning-peak\" style={{ opacity: morningPeakPercent }} />\n        <div className=\"light-filter time-sky-noon\" style={{ opacity: noonPercent }} />\n        <div className=\"light-filter time-sky-noon-peak\" style={{ opacity: noonPeakPercent }} />\n        <div className=\"light-filter time-sky-evening\" style={{ opacity: eveningPercent }} />\n        <div className=\"light-filter time-sky-evening-peak\" style={{ opacity: eveningPeakPercent }} />\n      </div>\n      <div style={{ opacity: (nightPercent + nightPeakPercent) }}>\n        <Stars width={width} height={height} />\n      </div>\n      <SkySphere\n        hour={hour}\n        percentX={skySpherePercentX}\n        percentY={skySpherePercentY}\n        isDay={isDay}\n        size={height / 6}\n        width={width}\n        height={height}\n        sunshine={isDay}\n      />\n      <div className=\"time-land-wrapper\">\n        <div className=\"land light-filter time-land-night\" style={{ opacity: nightPercent }} />\n        <div className=\"land light-filter time-land-night-peak\" style={{ opacity: nightPeakPercent }} />\n        <div className=\"land light-filter time-land-morning\" style={{ opacity: morningPercent }} />\n        <div className=\"land light-filter time-land-morning-peak\" style={{ opacity: morningPeakPercent }} />\n        <div className=\"land light-filter time-land-noon\" style={{ opacity: noonPercent }} />\n        <div className=\"land light-filter time-land-noon-peak\" style={{ opacity: noonPeakPercent }} />\n        <div className=\"land light-filter time-land-evening\" style={{ opacity: eveningPercent }} />\n        <div className=\"land light-filter time-land-evening-peak\" style={{ opacity: eveningPeakPercent }} />\n      </div>\n    </div>\n  )\n}","import React, { useState } from 'react';\nimport { useRenderInterval } from '../../utils/render-interval';\nimport { useChangingDayNightDetails, getDayNightDetails } from '../../utils/time';\nimport { Landscape } from './components/landscape/component';\n\nconst TIME_UPDATE_INTERVAL_MS = 20 * 1000;\n\nexport function TimeWidget(props) {\n  const [userIsFocused, setUserIsFocused] = useState(true);\n  const currentTimeDetails = useRenderInterval(TIME_UPDATE_INTERVAL_MS, getDayNightDetails);\n  const showCurrentTime = userIsFocused && !props.alwaysRun;\n  const rotatingDetails = useChangingDayNightDetails(!showCurrentTime);\n\n  const width = props.size ? props.size : props.width;\n  const height = props.size ? props.size : props.height;\n\n  const childProps = {\n    height,\n    width,\n    isRound: props.isRound,\n    ...(showCurrentTime ? currentTimeDetails : rotatingDetails),\n  }\n\n  return (\n    <div\n      onMouseEnter={() => setUserIsFocused(false)}\n      onMouseLeave={() => setUserIsFocused(true)}\n    >\n      <Landscape {...childProps} />\n    </div>\n  )\n}","import React from 'react';\nimport { TimeWidget } from '../../../../features/time-widget/component';\nimport { useWindowSize } from '../../../../utils/dom';\n\nexport function CurrentTime() {\n  const { width, height } = useWindowSize();\n\n  return (\n    <div>\n      <TimeWidget\n        width={width}\n        height={height}\n        isRound={false}\n        alwaysRun={true}\n      />\n    </div>\n  )\n}","import { useRef, useState, useLayoutEffect } from 'react';\n\n// Doesn't seem to work :thinking:\nexport function useDomDimensions() {\n  const ref = useRef(null);\n  const [width, setWidth] = useState(null);\n  const [height, setHeight] = useState(null);\n\n  function updateContainerSize() {\n    setWidth(ref.current && ref.current.clientWidth);\n    setHeight(ref.current && ref.current.clientHeight);\n  }\n\n  useLayoutEffect(() => {\n    updateContainerSize();\n  }, [])\n\n  useLayoutEffect(() => {\n    ref.current.addEventListener('resize', updateContainerSize);\n\n    return () => {\n      ref.current.removeEventListener('resize', updateContainerSize)\n    }\n  }, []);\n\n  return { ref, width, height };\n}\n\nexport function useWindowSize() {\n  const [width, setWidth] = useState(window.innerWidth);\n  const [height, setHeight] = useState(window.innerHeight);\n\n  function updateWindowSize() {\n    setWidth(window.innerWidth);\n    setHeight(window.innerHeight);\n  }\n\n  useLayoutEffect(() => {\n    window.addEventListener('resize', updateWindowSize);\n\n    return () => {\n      window.removeEventListener('resize', updateWindowSize)\n    }\n  }, []);\n\n  return { width, height };\n}","const PHRASES_HAPPY = [\n  \"Let's do it!\",\n  'Click here!',\n  'Over here, silly!',\n  'Get rich!',\n  'Get handsome!',\n  'Be your best you!',\n  'Buy buy buy!',\n  'Your friend has this...',\n  'Love forever',\n  'Fill the hole in your heart!'\n];\n\nconst PHRASES_ANGRY = [\n  \"Don't touch me\",\n  'Buzz off',\n  \"You don't get it\",\n  'Go outside',\n  'Do you need this?',\n  'Go click yourself',\n  'Rejection, as you know',\n  'Is your life this pointless?',\n  'Are we supposed to be friends?',\n  'Stop harrassing me',\n  'Wow you have time on your hands',\n  'You like wasting time',\n];\n\nfunction getPhrase(phrases) {\n  return phrases[Math.floor(Math.random() * phrases.length)];\n}\n\nexport function getAngryPhrase() {\n  return getPhrase(PHRASES_ANGRY);\n}\n\nexport function getHappyPhrase() {\n  return getPhrase(PHRASES_HAPPY);\n}","import React, { useReducer } from 'react';\nimport { getAngryPhrase, getHappyPhrase } from './utils/phrases';\nimport './styles.css';\n\nfunction getRandomClampedPercent() {\n  return `${(Math.random() * 60) + 15}%`;\n}\n\nconst ACTION_ANGER = 'anger';\nconst ACTION_HAPPY = 'happy';\nconst ACTION_MOVE = 'move';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTION_ANGER:\n      return {\n        ...state,\n        isDisabled: true,\n        phrase: getAngryPhrase(),\n      };\n    case ACTION_HAPPY:\n      return {\n        ...state,\n        isDisabled: false,\n        phrase: getHappyPhrase(),\n      };\n    case ACTION_MOVE:\n      return {\n        ...state,\n        top: getRandomClampedPercent(),\n        left: getRandomClampedPercent(),\n      };\n    default:\n      return state;\n  }\n}\n\nconst initialState = {\n  isDisabled: false,\n  phrase: \"Let's get started!\",\n  top: '50%',\n  left: '50%',\n};\n\nexport function CTA() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const { top, left, isDisabled, phrase } = state;\n\n  function makeButtonAngry() {\n    if (isDisabled) {\n      return;\n    }\n  \n    dispatch({type: ACTION_ANGER})\n\n    setTimeout(() => {\n      dispatch({type: ACTION_MOVE})\n\n      setTimeout(() => {\n        dispatch({type: ACTION_HAPPY})\n      }, 1500);\n    }, 2000);\n  }\n\n  const wrapperStyle = {\n    backgroundColor: isDisabled ? 'black' : 'LightYellow',\n  }\n\n  return (\n    <div className=\"the-rest\" style={wrapperStyle}>\n      <button\n        className=\"the-button\"\n        disabled={isDisabled}\n        onMouseEnter={makeButtonAngry}\n        onClick={makeButtonAngry}\n        style={{ top, left }}\n      >\n        {phrase}\n      </button>\n    </div> \n  );\n}","import { useState, useEffect } from 'react';\n\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nlet recognition = new SpeechRecognition();\n\nexport function useVoiceRecording() {\n  const [recordedWords, setRecordedWords] = useState([]);\n  const [isRecording, setIsRecording] = useState(false);\n\n  useEffect(() => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    recognition = new SpeechRecognition();\n    recognition.onresult = (event) => {\n      const transcript = event.results[event.resultIndex][0].transcript;\n      const eachWordRecorded = transcript.split(' ');\n      setRecordedWords(eachWordRecorded);\n      setIsRecording(false);\n    };\n  }, []);\n\n  function triggerRecording() {\n    recognition.start();\n    setIsRecording(true);\n  }\n\n  return {triggerRecording, recordedWords, isRecording};\n}","import React, { useState, useEffect, useLayoutEffect } from 'react';\nimport { useVoiceRecording } from './utils/use-voice-recording';\nimport './styles.css';\n\nfunction useSmoothScrollToBottom() {\n  useLayoutEffect(() => {\n    window.scroll({\n      top: document.body.clientHeight, \n      left: 0,\n      behavior: 'smooth',\n    });\n  });\n}\n\nconst initialWordsState = ['click', 'and', 'speak'];\nconst initialRhymesState = {\n  click: ['see'],\n  and: ['rhyming'],\n  speak: ['words'],\n};\n\nexport function Rhymes() {\n  const { triggerRecording, recordedWords, isRecording } = useVoiceRecording();\n  const [hasClearedScreen, setHasClearedScreen] = useState(false);\n  const [words, setWords] = useState(initialWordsState);\n  const [wordRhymes, setWordRhymes] = useState(initialRhymesState);\n  useSmoothScrollToBottom();\n\n  function resetRhymes() {\n    setWords([]);\n    setWordRhymes({});\n  }\n\n  function firstReset() {\n    if (!hasClearedScreen) {\n      setHasClearedScreen(true);\n      resetRhymes();\n    }\n  }\n\n  function queueWord(word) {\n    firstReset();\n    setWords(prevState => [...prevState, word]);\n\n    fetch(`https://api.datamuse.com/words?rel_rhy=${word}`)\n      .then(response => {\n        response.json().then((responseWords) => {\n          const subsetOfRhymes = responseWords.map((resp) => resp.word).slice(0, 20);\n\n          setWordRhymes((prevWordRhymes) => (\n            { ...prevWordRhymes, [word]: subsetOfRhymes }\n          ));\n        });\n      }).catch((error) => console.error(error));\n  }\n\n  useEffect(() => {\n    recordedWords.forEach(queueWord);\n  }, recordedWords);\n\n  function renderRhyme(word, index) {\n    return (\n      <span\n        key={index}\n        className=\"one-of-many-rhymes\"\n        onClick={() => queueWord(word)}\n      >\n        {word}{' '}\n      </span>\n    );\n  }\n\n  function renderWordRhyme(word, index) {\n    const rhymesForWord = wordRhymes[word] || [];\n\n    return (\n      <div key={index} className=\"rhyme-word-wrapper\">\n        <span className=\"rhyme-word\">\n          {word}\n        </span>\n        {rhymesForWord.map(renderRhyme)}\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <div>{words.map(renderWordRhyme)}</div>\n      <button\n        className=\"rhyming-button rhyming-trigger\"\n        onClick={triggerRecording}\n        disabled={isRecording}\n      >\n        DJ, spin that shit.\n      </button>\n      <button\n        className=\"rhyming-button rhyming-reset\"\n        onClick={resetRhymes}\n      >\n        Shit's wack, yo\n      </button>\n    </>\n  );\n}","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { CurrentTime } from './components/current-time/component';\nimport { CTA } from './components/cta/component';\nimport { Rhymes } from './components/rhymes/component';\n\nexport function Projects() {\n  return (\n    <Switch>\n      <Route exact path='/projects/current-time' component={CurrentTime}/>\n      <Route exact path='/projects/cta' component={CTA}/>\n      <Route exact path='/projects/rhymes' component={Rhymes}/>\n    </Switch>\n  );\n}\n","import React from 'react';\nimport './preview-styles.css';\n\nexport function PreviewCTA() {\n  return (\n    <div className=\"container\">\n      <div className=\"little-button\" />\n    </div>\n  );\n}","import React from 'react';\nimport './preview-styles.css';\nimport { useRenderInterval } from '../../../../utils/render-interval';\n\nlet numberOfLines = 3;\nfunction getNumberOfLines() {\n  numberOfLines++;\n\n  if (numberOfLines > 15) {\n    numberOfLines = 3;\n  }\n\n  return numberOfLines;\n}\n\nexport function PreviewRhymes() {\n  const numberOfLines = useRenderInterval(3000, getNumberOfLines)\n\n  return (\n    <div className=\"rhymes-preview\">\n      {Array.from(new Array(numberOfLines)).map((_, index) => (\n        <div key={index} className=\"rhyme-line\" />\n      ))}\n    </div>\n  );\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles.css';\n\nexport function Showcase(props) {\n  const style = {\n    backgroundColor: `hsl(${props.hue}, 20%, 90%)`,\n    border: `hsl(${props.hue}, 30%, 100%) 1px solid`,\n  }\n\n  let content = (\n    <div className=\"showcase\" style={style}>\n      <div className=\"showcase\" style={style}>\n        <div className=\"showcase\" style={style}>\n          <div className=\"showcase\" style={style}>\n            <div style={{ width: '150px', height: '150px' }}>\n              {props.children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  if (props.link) {\n    content = <Link to={props.link}>{content}</Link>;\n  }\n\n  return (\n    <div className=\"showcase-organizer\">\n      {content}\n      <div className=\"showcase-metadata\">\n        <div className=\"showcase-title\">{props.title}</div>\n        <div>{props.description}</div>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport { TimeWidget } from '../../features/time-widget/component';\nimport { PreviewCTA } from '../projects/components/cta/preview-component';\nimport { PreviewRhymes } from '../projects/components/rhymes/preview-component';\nimport { Showcase } from '../../features/showcase/component';\nimport './styles.css';\n\nexport function Play() {\n  return (\n    <div className=\"play\">\n      <h1>Play</h1>\n      <div className=\"play-projects\">\n        <div className=\"showcase-wrapper\">\n          <Showcase\n            title=\"Time++\"\n            description=\"Starting now, and so on.\"\n            link={`/projects/current-time`}\n            hue={3}\n          >\n            <TimeWidget size={150} isRound={true} />\n          </Showcase>\n        </div>\n\n        <div className=\"showcase-wrapper\">\n          <Showcase\n            title=\"CTA\"\n            description=\"We want you to click this one.\"\n            link={`/projects/cta`}\n            hue={215}\n          >\n            <PreviewCTA />\n          </Showcase>\n        </div>\n\n        <div className=\"showcase-wrapper\">\n          <Showcase\n            title=\"Rhymes\"\n            description=\"We've got hot bars for ya\"\n            link={`/projects/rhymes`}\n            hue={124}\n          >\n            <PreviewRhymes />\n          </Showcase>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useMutationEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles.css';\n\nexport function Profile() {\n  const [hasLoaded, setHasLoaded] = useState(false);\n\n  useMutationEffect(() => {\n    setHasLoaded(true)\n  }, [])\n\n  return (\n    <div className={`profile ${hasLoaded && 'profile-loaded'}`}>\n      <Link to=\"/\">clint.fm</Link>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Profile } from '../profile/component';\nimport './styles.css';\n\nexport function NavBar() {\n  return (\n    <div className=\"nav-bar\">\n      <Profile />\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport { App } from './app/component';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Homepage } from '../pages/homepage/component';\nimport { Switch, Route } from 'react-router-dom';\nimport { Projects } from '../pages/projects/component';\nimport { Play } from '../pages/play/component';\nimport { NavBar } from '../features/nav-bar/component';\nimport './style.css';\n\nexport function App() {\n  return (\n    <>\n      <Switch>\n        <Route exact path='/' component={Homepage}/>\n        <Route exact path='/play' component={Play}/>\n        <Route path='/projects' component={Projects}/>\n      </Switch>\n      <NavBar />\n    </>\n  );\n}\n"],"sourceRoot":""}